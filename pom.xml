<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>nl.tudelft.graphalytics</groupId>
	<artifactId>graphalytics-platforms-graphx</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<graphalytics.version>0.3-SNAPSHOT</graphalytics.version>
		<hadoop.version>2.4.1</hadoop.version>
		<scala.version>2.10.4</scala.version>
		<scalatest.version>2.2.4</scalatest.version>
		<spark.version>1.1.1</spark.version>
	</properties>

	<scm>
		<developerConnection>scm:git:ssh://git@github.com/tudelft-atlarge/graphalytics-platforms-giraph</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<dependencies>
		<dependency>
			<groupId>nl.tudelft.graphalytics</groupId>
			<artifactId>graphalytics-core</artifactId>
			<version>${graphalytics.version}</version>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.10</artifactId>
			<version>${scalatest.version}</version>
		</dependency>


		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>nl.tudelft.pds.granula</groupId>
			<artifactId>graphx-analyzer</artifactId>
			<version>0.1.2</version>
		</dependency>
	</dependencies>


	<profiles>
		<profile>
			<id>original</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.apache.spark</groupId>
					<artifactId>spark-core_2.10</artifactId>
					<version>${spark.version}</version>
				</dependency>
				<dependency>
					<groupId>org.apache.spark</groupId>
					<artifactId>spark-graphx_2.10</artifactId>
					<version>${spark.version}</version>
				</dependency>
				<dependency>
					<groupId>org.apache.spark</groupId>
					<artifactId>spark-yarn_2.10</artifactId>
					<version>${spark.version}</version>
					<exclusions>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-client</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-yarn-api</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-yarn-client</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-yarn-common</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-yarn-server-web-proxy</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
				<!-- Having hadoop client dependencies before spark dependencies results in a version conflict -->
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-yarn-client</artifactId>
					<version>${hadoop.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-client</artifactId>
					<version>${hadoop.version}</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- Maven Shade plugin used by platform modules to create fat JARs -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<minimizeJar>false</minimizeJar>
							<filters>
								<filter>
									<artifact>*.*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
							</transformers>
							<finalName>${artifactId}-${version}-original</finalName>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>granula</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.apache.spark</groupId>
					<artifactId>spark-core_2.10</artifactId>
					<version>${spark.version}-withGranula</version>
				</dependency>
				<dependency>
					<groupId>org.apache.spark</groupId>
					<artifactId>spark-graphx_2.10</artifactId>
					<version>${spark.version}-withGranula</version>
				</dependency>
				<dependency>
					<groupId>org.apache.spark</groupId>
					<artifactId>spark-yarn_2.10</artifactId>
					<version>${spark.version}-withGranula</version>
					<exclusions>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-client</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-yarn-api</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-yarn-client</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-yarn-common</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>hadoop-yarn-server-web-proxy</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
				<!-- Having hadoop client dependencies before spark dependencies results in a version conflict -->
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-yarn-client</artifactId>
					<version>${hadoop.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-client</artifactId>
					<version>${hadoop.version}</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- Maven Shade plugin used by platform modules to create fat JARs -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<minimizeJar>false</minimizeJar>
							<filters>
								<filter>
									<artifact>*.*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
							</transformers>
							<finalName>${artifactId}-${version}-withGranula</finalName>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaVersion>2.10.4</scalaVersion>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerArgument></compilerArgument>
				</configuration>
			</plugin>



			<!-- Maven release management -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<pushChanges>false</pushChanges>
				</configuration>
			</plugin>

			<!-- Plugin for ensuring the presence of license information -->
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<header>http://www.pds.ewi.tudelft.nl/~mihai/copyright-notice-template</header>
					<properties>
						<owner>Delft University of Technology</owner>
						<project.inceptionYear>2015</project.inceptionYear>
					</properties>
					<excludes>
						<exclude>README</exclude>
						<exclude>LICENSE</exclude>
						<exclude>pom.xml</exclude>
						<exclude>src/test/resources/**</exclude>
						<exclude>src/main/resources/**</exclude>
						<exclude>config-template/**</exclude>
						<exclude>src/main/java/nl/tudelft/graphalytics/giraph/conn/DirectedConnectedComponentsComputation.java</exclude>
						<exclude>src/main/java/nl/tudelft/graphalytics/giraph/conn/UndirectedConnectedComponentsComputation.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>GraphalyticsGraphXTestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

